# Define the name of the workflow
name: Django CI/CD

# Trigger the workflow on push to the main branch
on:
  push:
    branches: [ "main" ]

jobs:
  # Build and Test job
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the repository
    - uses: actions/checkout@v4

    # Set up Python environment
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # Cache pip dependencies
    - name: Cache Dependencies
      uses: actions/cache@v4.0.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  # Docker build and push job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Check out the repository
    - uses: actions/checkout@v4

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and Push Docker Images
    - name: Build and Push Docker Images
      run: |
        # Build and push the app image
        docker buildx build --push --platform linux/amd64,linux/arm64 \
          --file DockerFile \
          --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --build-arg EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
          --build-arg EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} \
          --build-arg EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} \
          --build-arg EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
          --build-arg DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} \
          --build-arg EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} \
          --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --build-arg AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }} \
          --build-arg AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }} \
          --build-arg DB_NAME=${{ secrets.DB_NAME }} \
          --build-arg DB_USER=${{ secrets.DB_USER }} \
          --build-arg DB_PASS=${{ secrets.DB_PASS }} \
          --build-arg DB_HOST=${{ secrets.DB_HOST }} \
          --build-arg DB_PORT=${{ secrets.DB_PORT }} \
          --build-arg STRIPE_LIVE_PUBLISHABLE_KEY=${{ secrets.STRIPE_LIVE_PUBLISHABLE_KEY }} \
          --build-arg STRIPE_LIVE_SECRET_KEY=${{ secrets.STRIPE_LIVE_SECRET_KEY }} \
          --build-arg STRIPE_TEST_SECRET_KEY=${{ secrets.STRIPE_TEST_SECRET_KEY }} \
          --build-arg STRIPE_TEST_PUBLISHABLE_KEY=${{ secrets.STRIPE_TEST_PUBLISHABLE_KEY }} \
          --tag ${{ secrets.DOCKER_USERNAME }}/kreeck-academy-app:latest .

        # Build and push the compiler image
        docker buildx build --push --platform linux/amd64,linux/arm64 \
          --file dockerfile.compiler \
          --tag ${{ secrets.DOCKER_USERNAME }}/kreeck-academy-compiler:latest .

        # Build and push the nginx image
        docker buildx build --push --platform linux/amd64,linux/arm64 \
          --file nginx/Dockerfile \
          --tag ${{ secrets.DOCKER_USERNAME }}/kreeck-academy-nginx:latest ./nginx

    # Deploy Docker Container
    - name: Deploy Docker Container
      run: |
        docker run -d --name kreeck-academy --restart always -p 8000:8000 \
          -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
          -e EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
          -e EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} \
          -e EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} \
          -e EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
          -e DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} \
          -e EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} \
          -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          -e AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }} \
          -e AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }} \
          -e DB_NAME=${{ secrets.DB_NAME }} \
          -e DB_USER=${{ secrets.DB_USER }} \
          -e DB_PASS=${{ secrets.DB_PASS }} \
          -e DB_HOST=${{ secrets.DB_HOST }} \
          -e DB_PORT=${{ secrets.DB_PORT }} \
          -e STRIPE_LIVE_PUBLISHABLE_KEY=${{ secrets.STRIPE_LIVE_PUBLISHABLE_KEY }} \
          -e STRIPE_LIVE_SECRET_KEY=${{ secrets.STRIPE_LIVE_SECRET_KEY }} \
          -e STRIPE_TEST_SECRET_KEY=${{ secrets.STRIPE_TEST_SECRET_KEY }} \
          -e STRIPE_TEST_PUBLISHABLE_KEY=${{ secrets.STRIPE_TEST_PUBLISHABLE_KEY }} \
          ${{ secrets.DOCKER_USERNAME }}/kreeck-academy-app:latest
