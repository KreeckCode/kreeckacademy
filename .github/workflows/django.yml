name: Django CI

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint and Format Code
      run: |
        pip install flake8 black
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black .
    - name: Run Tests
      run: |
        python manage.py test
    - name: Test Code Coverage
      run: |
        pip install coverage
        coverage run --source='.' manage.py test
        coverage report -m
    - name: Security Scanning
      run: |
        pip install bandit safety
        bandit -r ./
        safety check --full-report
    - name: Static Analysis
      run: |
        pip install pylint mypy
        pylint ./*.py
        mypy .
    #- name: Deploy to Staging
    #  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #  run: |
    #    echo "Deploying to staging..."
    #    # Add commands for deployment to staging environment (e.g., using Ansible, Fabric)
    - name: Notification and Reporting
      if: failure()
      run: |
        echo "Build failed. Sending notification..."
        # Add commands for notifications or reporting on build failures (e.g., send email, Slack message)

