# Define the name of the workflow
name: Django CI/CD

# Trigger the workflow on push to the production branch
on:
  push:
    branches: [ "main" ]

# Define the jobs in the workflow
jobs:
  # Build and Test job
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the repository
    - uses: actions/checkout@v4

    # Set up Python environment
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # Cache pip dependencies
    - name: Cache Dependencies
      uses: actions/cache@v4.0.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt


  # Docker build and push job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Check out the repository
    - uses: actions/checkout@v4

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Stop the running container (optional)
    - name: Stop Running Container
      run: |
        if docker ps | grep -q kreeck-academy; then
          docker stop kreeck-academy && docker rm kreeck-academy
        fi

    # Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        docker buildx build --push --platform linux/amd64,linux/arm64 --tag kreeckdocker/kreeck-academy:latest .

    # Deploy Docker Container
    - name: Deploy Docker Container
      run: |
        docker run -d --name kreeck-academy --restart always -p 8000:8000 kreeckdocker/kreeck-academy:latest
