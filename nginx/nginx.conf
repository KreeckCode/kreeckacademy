user nginx;
worker_processes auto;
pid /run/nginx.pid;

env TARGET_ENV;

events {
    worker_connections 1024;
}

http {
    # Define upstream servers
    upstream app_production {
        server app_production:8000;
    }

    upstream app_pre_production {
        server app_pre_production:8000;
    }

    upstream app_development {
        server app_development:8000;
    }

    upstream compiler {
        server compiler:8001;
    }

    # Define a map for environment-based proxying
    map $TARGET_ENV $upstream {
        default         http://app_production;
        pre_production  http://app_pre_production;
        development     http://app_development;
        production      http://app_production;
    }

    server {
        listen 80;

        location / {
            proxy_pass $upstream;
            proxy_cache my_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /compiler/ {
            proxy_pass http://compiler;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health/ {
            proxy_pass http://compiler/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_intercept_errors on;
        }
    }
}
